"""
Django settings for tusubasta project.
Generated by 'django-admin startproject' using Django 1.8.
For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from django.contrib.messages import constants as messages
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')x2=7i0721d$fk55==ze%4c982a5bqnbi0m-iruv(n&&u_!%!e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'haystack',
    'storages',
    'sitio',
    'login',
 'widget_tweaks',
)


MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'tusubasta.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
               
            ],
        },
    },
]

WSGI_APPLICATION = 'tusubasta.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'tusubastaBD',
        'USER': 'usrsubasta',
        'PASSWORD': 'subasta01',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


#Configuracion de SMTP
EMAIL_HOST 			= 'smtp.gmail.com'
EMAIL_HOST_USER		= 'tusubasta2017@gmail.com'
EMAIL_HOST_PASSWORD	= 'ingweb2017'
EMAIL_PORT 			= 587 #465
EMAIL_USE_TLS		= True
DEFAULT_FROM_EMAIL	= 'Tu Subasta'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'es-ar'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static_server_files')

#STATICFILES_DIR = [ os.path.join(BASE_DIR,"static/"),
# ]

if os.environ.get('HEROKU', False):
    # settings especificas para heroku
    import dj_database_url
    from urllib.parse import urlparse

    DATABASES['default'] = dj_database_url.config()
    ALLOWED_HOSTS = ['*']
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    
    # Configuracion para Amazon
    STATICFILES_LOCATION = '/static/'
    MEDIAFILES_LOCATION = 'media'
    STATICFILES_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
    # AWS_S3_SECURE_URLS = False
    AWS_STORAGE_BUCKET_NAME = "tusubasta"
    AWS_S3_CUSTOM_DOMAIN = 's3.amazonaws.com/%s' % AWS_STORAGE_BUCKET_NAME
    STATIC_URL = "https://s3.amazonaws.com/tusubasta/Subasta/%s/" % AWS_STORAGE_BUCKET_NAME
    MEDIA_URL = "https://%s/il/media/" % AWS_S3_CUSTOM_DOMAIN
    AWS_QUERYSTRING_AUTH = False
    AWS_DEFAULT_ACL = "private"
    from boto.s3.connection import ProtocolIndependentOrdinaryCallingFormat
    AWS_S3_CALLING_FORMAT = ProtocolIndependentOrdinaryCallingFormat()
    from boto.s3.connection import S3Connection
    S3Connection.defaultHost = 's3-us-east-1.amazon.com'
    AWS_ACCESS_KEY_ID = "AKIAIAHFC2ZDTYRBFWWQ"
    AWS_SECRET_ACCESS_KEY = "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"

    #ElastichSearch
    
    es = urlparse(os.environ.get('SEARCHBOX_URL') or 'http://127.0.0.1:9200/')
    port = es.port or 80

    HAYSTACK_CONNECTIONS = {
        'default': {
            'ENGINE': 'haystack_elasticsearch5.Elasticsearch5SearchEngine',
            'URL': es.scheme + '://' + es.hostname + ':' + str(port),
            'INDEX_NAME': 'documents',
        },
    }

    if es.username:
        HAYSTACK_CONNECTIONS['default']['KWARGS'] = {"http_auth": es.username + ':' + es.password}

else: 
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
    AWS_S3_SECURE_URLS = False
    AWS_STORAGE_BUCKET_NAME = "tusubasta"
    AWS_S3_CUSTOM_DOMAIN = 's3.amazonaws.com/%s' % AWS_STORAGE_BUCKET_NAME
    #STATIC_URL = "https://s3.amazonaws.com/tusubasta/%s/" % AWS_STORAGE_BUCKET_NAME
    MEDIA_URL = "https://s3.amazonaws.com/tusubasta/" 
    AWS_QUERYSTRING_AUTH = False
    AWS_DEFAULT_ACL = "private"
    from boto.s3.connection import ProtocolIndependentOrdinaryCallingFormat
    AWS_S3_CALLING_FORMAT = ProtocolIndependentOrdinaryCallingFormat()
    from boto.s3.connection import S3Connection
    S3Connection.defaultHost = 's3-us-east-1.amazon.com'
    AWS_ACCESS_KEY_ID = "AKIAIAHFC2ZDTYRBFWWQ"
    AWS_SECRET_ACCESS_KEY = "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"


    #ElastichSearch
    HAYSTACK_CONNECTIONS = {
        'default': {
            'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
            'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
        },
    }
